- Overall
  - Unsupported syntax    
    - bit vectors    
    - reals, /, **, int(), real(), decimal/float litearls
    - call * := Q(x, y), call forall to a procedure with out-parameters
    - empty map domains x: []int    
    - code expression
  - Optimization: e.g. better data structures instead of lists  
  - Do not throw away attributes and triggers
  - Dynamic assertion (loop invariant) inference (testing + statistical test)?

- Type checker
  - Data type for type errors (will be easier to evaluate test results)
  - Use lenses for Context?
  - Annotate AST with expr types
  
- Interpreter
  -> Check function and map constraints lazily
    - Add name to FDef to display in errors instead of "axiom"
    - Rename FDef?
    - Map equality with overrides: check that values chosen for old sources conform to constraints, add non-equal guards to the new source
    - Move definitions/constraints without guards to the front
    - For constraints and definitions take types of quantified variables into account (for a polymorphic function/map, a type can serve as a guard)
    - Eager bounded mode: do not check constraints if map index is beyond bounds?
    - Lazy mode: only enforce a constraint when all involved values are already defined (less consistent, but doesn't loop)
      - Eager mode causes wrong error positions
    - Infer constraints from axioms that mention a map update (using not-equals guard?)
  -> Indexing by maps (so far only for functions)
  - Refactor executeLocally, execCall and execProcedure  
  - Printable class?  
  - Lazy initialization of arguments (in execLocally only copy those args that are already initialize, at the end propage the initizlization back with assume)
  - Lambda expressions
  - Turn source positions into spans; use the end of the span to report postcondition violations  
  - Extends ordering
  - Constraint solving
  - Call forall
    
- User interface
  - pass more information with failures other than spec violations, so that relevant variables can be determined
  - settings for disabling checking of different specs
  - interactive sessions
  - debugger
