- Overall
	- New syntax
	- Bit vectors
	- Do not throw away attributes and triggers

- Interpreter
	- Check axioms and where clauses when choosing a value
	- Quantified expressions
	- Create package and some doc
-> Release 0.1	
	- Extract function definitions from axioms
	- User-defined types
	- Extends ordering
	- Backtracking (logicT monad?)
	- Constraint solving
	- User interface
		- allow choosing entry point and passing command line args
		- settings for disabling different checking of different specs
		- output local state with runtime error?
	- Interactive sessions
	
Notes:
- Where clauses of in-parameters: according to the manual can mention out-parameters, but actually can't
- Breaks with labels. a: b: while(...) {break a;} is not allowed in the implementation (as is l: break l;), but seems to be allowed by the manual.
- The syntax of WhereClause is missing in the boogie manual

Unsupported syntax:
- call * := Q(x, y);
- empty map domains x: []int